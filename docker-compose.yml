volumes:
  data:
  postgis:
  tiles:
  caddy_data:
  caddy_config:

networks:
  soundscape-net:
    driver: bridge

services:
  # =============================================================================
  # PROXY REVERSO - CADDY (Puerto Ãºnico de entrada)
  # =============================================================================
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - ${FILES_DIR}:/srv/files:ro
    networks:
      - soundscape-net
    depends_on:
      - web
      - tilesrv

  # =============================================================================
  # AUTHORING TOOL SERVICES
  # =============================================================================
  web:
    build: ./
    restart: unless-stopped
    expose:
      - "8000"
    env_file:
      - ./.env
    environment:
      - AZURE_MAPS_SUBSCRIPTION_KEY=${AZURE_MAPS_SUBSCRIPTION_KEY}
      - DATABASE_URL=postgresql://${PSQL_DB_USER:-postgres}:${PSQL_DB_PASS:-postgres}@postgres-authoring:5432/${PSQL_DB_NAME:-postgres}
    volumes:
      - ${FILES_DIR}:/app/backend/files
    networks:
      - soundscape-net
    depends_on:
      postgres-authoring:
        condition: service_healthy

  postgres-authoring:
    image: postgres:16-alpine
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - soundscape-net
    environment:
      - POSTGRES_USER=${PSQL_DB_USER:-postgres}
      - POSTGRES_PASSWORD=${PSQL_DB_PASS:-postgres}
      - POSTGRES_DB=${PSQL_DB_NAME:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # DATA SERVER SERVICES
  # =============================================================================
  postgres-tiles:
    image: postgis/postgis
    platform: linux/amd64
    restart: unless-stopped
    user: postgres
    expose:
      - "5432"
    environment:
      - POSTGRES_PASSWORD=secret
      - PGUSER=postgres
    volumes:
      - postgis:/var/lib/postgresql/data
    networks:
      - soundscape-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ingest:
    build:
      context: ./data-srv
      dockerfile: Dockerfile.ingest
    image: soundscape/ingest
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - GEN_REGIONS=andorra
      - LOOP_TIME=14400
      - NAMESPACE=soundscape
      - POSTGIS_HOST=postgres-tiles
      - POSTGIS_PORT=5432
      - POSTGIS_USER=postgres
      - POSTGIS_PASSWORD=secret
      - POSTGIS_DBNAME=osm
    volumes:
      - tiles:/tiles
      - ./data-srv/non_osm_data:/non_osm_data
    expose:
      - "8083"
    networks:
      - soundscape-net
    depends_on:
      postgres-tiles:
        condition: service_healthy

  tilesrv:
    build:
      context: ./data-srv
      dockerfile: Dockerfile.tilesrv
    image: soundscape/tilesrv
    restart: unless-stopped
    environment:
      - DSN=host=postgres-tiles port=5432 dbname=osm user=postgres password=secret
    expose:
      - "8080"
    networks:
      - soundscape-net
    depends_on:
      postgres-tiles:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/healthz",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
