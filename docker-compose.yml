#
# To launch Postgres and web containers:
#   Copy sample.env to .env and edit to set the environment variables
#   $ docker-compose up -d --build
# to create a superuser:
#   $ docker-compose exec web /venv/bin/python manage.py createsuperuser
# to stop and remove containers:
#   $ docker-compose down
# to list images:
# docker images
# to delete the images:
# docker rmi authoring-tool-web:latest
# to remove all unused images, not just dangling ones:
# docker system prune -a

# Rebuild del proyecto web
# docker-compose build web && docker-compose up -d web

volumes:
  data:

services:
  files:
    image: nginx:alpine
    ports:
      - "8001:8001"
    volumes:
      - ${FILES_DIR}:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    command: nginx-debug -g 'daemon off;'
  web:
    build: ./
    ports:
      - "${LOCALHOST_PORT}:8000"
    env_file:
      - ./.env
    environment:
      - AZURE_MAPS_SUBSCRIPTION_KEY=${AZURE_MAPS_SUBSCRIPTION_KEY}
    volumes:
      - ${FILES_DIR}:/app/backend/files
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${PSQL_DB_USER:-postgres}
      - POSTGRES_PASSWORD=${PSQL_DB_PASS:-postgres}
      - POSTGRES_DB=${PSQL_DB_NAME:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
